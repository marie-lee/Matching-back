openapi: 3.0.0
info:
  title: Matching Back API
  version: 1.0.0
servers:
  - url: http://218.232.137.30:20080/api
tags:
  - name: member
    description: 멤버 관련
  - name: project
    description: 프로젝트 관련
paths:
  /member/login:
    post:
      tags:
        - member
      summary: login
      description: login
      requestBody:
        description: login
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/loginReq'
        required: true
      responses:
        '200':
          $ref: '#/components/responses/loginRes200'
        '400':
          $ref: '#/components/responses/loginRes400'
        '401':
          $ref: '#/components/responses/loginRes401'
  /member/profile:
    post:
      tags:
        - member
      summary: 프로필, 포트폴리오 입력
      description: |
        프로필, 포트폴리오 입력
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/profileUpload'
      responses:
        '200':
          $ref: '#/components/responses/profileUpload200'
      security:
        - JWT: []
  /project:
    get:
      tags:
        - project
      summary: 내 프로젝트 조회
      description: 내 프로젝트 조회
      responses:
        '200':
          $ref: '#/components/responses/myProjects200'
      security:
        - JWT: []
  /project/add:
    post:
      tags:
        - project
      summary: 프로젝트 등록
      description: 새로운 프로젝트를 등록합니다.
      requestBody:
        description: 프로젝트 등록 정보
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/registerProject'
        required: true
      responses:
        '200':
          description: 프로젝트 등록 성공
          content:
            text:
              example: 프로젝트 등록 성공
        '400':
          description: 잘못된 요청
          content:
            text/plain:
              schema:
                type: string
                example: '프로젝트 등록 중 에러 발생 에러내용: {에러메시지}'
      security:
        - JWT: [ ]

components:
  schemas:
    loginReq:
      description: login request
      type: object
      properties:
        email:
          type: string
          description: 유저 이메일
          example: example@google.com
        password:
          type: string
          description: 유저 패스워드
          example: asdf1234
      required:
        - email
        - password
    profileUpload:
      type: object
      properties:
        profile:
          $ref: '#/components/schemas/profileUpload'
        portfolios:
          type: array
          items:
            $ref: '#/components/schemas/profileUpload'
      example: # 여기에 JSON 예시를 추가합니다.
        profile:
          PF_INTRO: 설명
          USER_IMG: http://218.232.137.30:20090/matching/profile/img.jpg
          CAREER:
            - CAREER_NM: 회사
              ENTERING_DT: "2021-01-01"
              QUIT_DT: "2022-12-31"
            - CAREER_NM: 회사2
              ENTERING_DT: "2023-01-01"
              QUIT_DT: "2024-01-31"
          STACK:
            - ST_NM: JAVA
              LEVEL: LOW
            - ST_NM: JS
              LEVEL: LOW
          INTRST:
            - JAVA
            - REACT
          URL:
            - URL: www.www.www
              URL_INTRO: url 설명1
            - URL: www.www.com
              URL_INTRO: url 설명2
        portfolios:
          - PFOL_NM: 포트폴리오1
            INTRO: 설명
            PERIOD: "5"
            START_DT: "2021-01-01"
            END_DT: "2022-01-01"
            MEM_CNT: "5"
            CONTRIBUTION: "20"
            SERVICE_STTS: ACTIVE
            RESULT: 만족
            STACK:
              - ST_NM: JAVA
              - ST_NM: STRING
            ROLE:
              - 기획
              - 백엔드
            URL:
              - URL: www.url.com
                URL_INTRO: url1 설명
                RELEASE_YN: "1"
                OS: WINDOWS
              - URL: www.url2.com
                URL_INTRO: url2 설명
                RELEASE_YN: "0"
                OS: MAC OS
            MEDIA:
              - URL: http://218.232.137.30:20090/matching/portfolio/img.png
                MAIN_YN: "1"
              - URL: http://218.232.137.30:20090/matching/portfolio/video.mp4
                MAIN_YN: "0"
          - PFOL_NM: 포트폴리오2
            INTRO: 설명
            PERIOD: "3"
            START_DT: "2021-01-01"
            END_DT: "2022-01-01"
            MEM_CNT: "3"
            CONTRIBUTION: "40"
            SERVICE_STTS: STOP
            RESULT: 아쉬움
            STACK:
              - ST_NM: REACT
              - ST_NM: NEST.JS
            ROLE:
              - 디자인
              - 프론트엔드
            URL:
              - URL: www.url4.com
                URL_INTRO: url 설명
                RELEASE_YN: "0"
                OS: LINUX
              - URL: www.url5.com
                URL_INTRO: url 설명
                RELEASE_YN: "1"
                OS: IOS
            MEDIA:
              - URL: http://218.232.137.30:20090/matching/portfolio/portfolio.png
                MAIN_YN: "0"
              - URL: http://218.232.137.30:20090/matching/portfolio/media.mp4
                MAIN_YN: "1"
    registerProject:
      type: object
      properties:
        PJT_NM:
          type: string
          description: 프로젝트 이름
          example: Sample Project
        PJT_IMG:
          type: string
          description: 프로젝트 이미지 URL
          example: https://example.com/image.png
        PJT_INTRO:
          type: string
          description: 프로젝트 소개
          example: 이건 이런 프로젝트에요.
        PJT_OPEN_YN:
          type: string
          description: 프로젝트 공개 여부
          example: Y
        CONSTRUCTOR_ROLE:
          type: string
          description: 생성자 역할
          example: Developer
        SELECTED_DT_YN:
          type: string
          description: 선택된 날짜 여부
          example: Y
        START_DT:
          type: string
          format: date
          description: 프로젝트 시작 날짜
          example: 2024-06-01
        PERIOD:
          type: string
          description: 프로젝트 기간
          example: 6
        WANTED:
          type: array
          items:
            type: string
          description: 원하는 기술/경험 목록
          example: ["3년경력이상", "깔끔한코드", "협업경험"]
        PJT_DETAIL:
          type: string
          description: 프로젝트 상세 정보
          example: 이 프로젝트에 대한 자세한 소개입니다
        PJT_STTS:
          type: string
          description: 프로젝트 상태
          example: active
        STACKS:
          type: array
          items:
            type: object
            properties:
              ST_NM:
                type: string
                description: 스택 이름
                example: JavaScript
    project:
      type: object
      properties:
        PJT_SN:
          type: integer
          description: 프로젝트 PK
          example: 1
        PJT_NM:
          type: string
          description: 프로젝트 이름
          example: Sample Project
        PJT_INTRO:
          type: string
          description: 프로젝트 설명
          example: 이건 이런 프로젝트에요.
        PJT_STTS:
          type: string
          description: 프로젝트 상태
          example: active


  securitySchemes:
    JWT:
      type: http
      scheme: bearer
      bearerFormat: JWT
  responses:
    loginRes200:
      description: 로그인 성공
      content:
        application/json:
          schema:
            description: login response
            type: object
            properties:
              accessToken:
                type: string
                description: access token
                example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJVU0VSX1NOIjoxLCJpYXQiOjE3MTY2MzkxMjksImV4cCI6MTcxNjY0MDkyOX0.Q4tn2cP5qBM1OTIHohhxSSADtS_tgIQhdbJbibNot_U
              refreshToken:
                type: string
                description: refresh token
                example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJVU0VSX1NOIjoxLCJpYXQiOjE3MTY2MzkxMjksImV4cCI6MTcxNzI0MzkyOX0.aVv_TxAd1GRAWd9i6MjS47vw1NZb0gC3cKO29Y9pUyc
              USER_NM:
                type: string
                description: 유저 이름
                example: 이름
    loginRes400:
      description: Invalid input
      content:
        text:
          example: error 메시지
    loginRes401:
      description: Validation exception
      content:
        text:
          example: '로그인 실패 : 유저 정보를 찾지 못했습니다.'
    profileUpload200:
      description: 프로필 업로드 성공
      content:
        text:
          example: 프로필, 포트폴리오 입력 완료
    myProjects200:
      description: 내 프로젝트 조회 성공
      content:
        application/json:
          schema:
            type: array
            items:
              type: object
              properties:
                PJT_SN:
                  type: integer
                  description: 프로젝트 PK
                  example: 1
                PJT_NM:
                  type: string
                  description: 프로젝트 이름
                  example: project 1
                PJT_INTRO:
                  type: string
                  description: 프로젝트 설명
                  example: 설명
                START_DT:
                  type: string
                  description: 프로젝트 시작 날짜
                  example: 2024-05-01
                PERIOD:
                  type: integer
                  description: 프로젝트 기간
                  example: 6
                CREATED_USER_SN:
                  type: integer
                  description: 프로젝트 생성자 SN
                  example: 2
                PJT_STTS:
                  type: string
                  description: 프로젝트 상태
                  example: PROGRESS
          example:
            - PJT_SN: 1
              PJT_NM: project1
              PJT_INTRO: 설명1
              START_DT: null
              PERIOD: null
              CREATED_USER_SN: 1
              PJT_STTS: RECUIT
            - PJT_SN: 2
              PJT_NM: project2
              PJT_INTRO: 설명2
              START_DT: 2024-05-01
              PERIOD: 5
              CREATED_USER_SN: 1
              PJT_STTS: PROGRESS



